<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context-4.0.xsd
	   http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-autowire="byName" default-lazy-init="false">
       
    <!-- 启用springMvc注解功能 -->
	<!--<mvc:annotation-driven />-->
	<mvc:annotation-driven/>

    <!-- 设置使用注解的类所在的jar包 -->
    <!--<context:component-scan base-package="com.harambase.pioneer"/>-->

	<context:component-scan base-package="com.harambase.pioneer">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<mvc:resources mapping="/javascript/**" location="WEB-INF/html/release/scripts/"/>
	<mvc:resources mapping="/styles/**" location="WEB-INF/html/release/styles/"/>
	<mvc:resources mapping="/images/**" location="WEB-INF/html/release/assets/"/>
	<mvc:default-servlet-handler />

	<!-- 放行 登陆的界面 因为springmvc要带*.do -->
	 	 <!-- <mvc:interceptors>
			<mvc:interceptor>
				<mvc:mapping path="/**"/>
				<mvc:exclude-mapping path="/login.do"/>
				<mvc:exclude-mapping path="/logout.do"/>
				<bean class="com.youedata.cd.govaff.web.filter.UserInterceptor"></bean>
			</mvc:interceptor>
		</mvc:interceptors>   -->

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->

	<!--
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="mappingJacksonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
    -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		  <property name="prefix" value="/WEB-INF/html/" />
		  <property name="suffix" value=".html"/>
	</bean>


	<!-- 语言支持：国际化配置 -->
	<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化信息所在的文件名 -->
		<property name="basename" value="messages/message" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- 基于Cookie的本地化解析器 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieMaxAge" value="604800" />
		<property name="defaultLocale" value="zh_CN" />
		<property name="cookieName" value="Language"/>
	</bean>
	<!-- 基于Session的本地化解析器 -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/> -->

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>10485760000</value><!-- 10M -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- 配置错误处理页面 -->
    <!-- 通过 SimpleMappingExceptionResolver处理错误页面 -->
    <bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 更改试图中exception的名称 -->
        <!-- <property name="exceptionAttribute" value="ex"></property> <property
            name="exceptionMappings"> <props> <prop key="java.lang.ArrayIndexOutOfRoundsException"></prop>
            </props> </property> -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">500</prop>
            </props>
        </property>
        <property name="warnLogCategory" value="WARN"></property>
        <property name="defaultErrorView" value="500"></property>
        <property name="defaultStatusCode" value="500"></property>
        <property name="statusCodes">
            <props>
                <prop key="404">404</prop>
                <prop key="500">500</prop>
            </props>
        </property>
    </bean>
</beans>